generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Models {
  id              String         @id @default(uuid())
  name            String
  sku             String?        @default("")
  description     String?        @default("")
  groupId         String?
  manufacturersId String?
  Group           Group?         @relation(fields: [groupId], references: [id])
  Manufacturers   Manufacturers? @relation(fields: [manufacturersId], references: [id])
  item            Item[]
}

model Manufacturers {
  id     String   @id @default(uuid())
  name   String
  models Models[]
}

model Supplier {
  id          String        @id @default(uuid())
  name        String
  serviceId   String?
  Service     Service?      @relation(fields: [serviceId], references: [id])
  demand      Demand[]
  serviceType ServiceType[]
}

model ServiceType {
  id         String    @id @default(uuid())
  name       String
  supplierId String?
  Supplier   Supplier? @relation(fields: [supplierId], references: [id])
}

model Service {
  id             String     @id @default(uuid())
  lineNumber     String
  contractNumber String
  obs            String
  immobile       Immobile[]
  status         Status[]
  supplier       Supplier[]
}

model Immobile {
  id        String   @id @default(uuid())
  name      String
  place     String
  district  String
  city      String
  latitude  String
  longitude String
  serviceId String?
  demandId  String?
  Demand    Demand?  @relation(fields: [demandId], references: [id])
  Service   Service? @relation(fields: [serviceId], references: [id])
  opm       Opms[]
}

model Demand {
  id         String     @id @default(uuid())
  amount     Int
  justify    String
  supplierId String?
  groupId    String?
  Group      Group?     @relation(fields: [groupId], references: [id])
  Supplier   Supplier?  @relation(fields: [supplierId], references: [id])
  immobile   Immobile[]
}

model Group {
  id     String   @id @default(uuid())
  name   String
  demand Demand[]
  models Models[]
}

model Opms {
  id         String    @id @default(uuid())
  name       String
  acronym    String
  immobileId String?
  Immobile   Immobile? @relation(fields: [immobileId], references: [id])
}

model Status {
  id        String   @id @default(uuid())
  name      String
  serviceId String?
  itemId    String?
  Item      Item?    @relation(fields: [itemId], references: [id])
  Service   Service? @relation(fields: [serviceId], references: [id])
}

model Item {
  id           String   @id @default(uuid())
  serialNumber String
  tombNumber   String
  imei         String
  obs          String
  status       Status[]
  model        Models[]
}
